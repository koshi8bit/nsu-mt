package org.nsu.fit.tests.api;

import io.qameta.allure.Feature;
import io.qameta.allure.Severity;
import io.qameta.allure.SeverityLevel;
import org.nsu.fit.services.log.Logger;
import org.nsu.fit.services.rest.RestClient;
import org.nsu.fit.services.rest.data.AccountTokenPojo;
import org.nsu.fit.services.rest.data.CustomerPojo;
import org.nsu.fit.services.rest.data.PlanPojo;
import org.nsu.fit.services.rest.data.SubscriptionPojo;
import org.nsu.fit.shared.JsonMapper;
import org.testng.Assert;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import javax.ws.rs.InternalServerErrorException;

public class SubsTest {

    private RestClient restClient;
    private AccountTokenPojo adminToken;
    private AccountTokenPojo customerToken;


    @BeforeClass
    private void auth() {
        restClient = new RestClient();
        adminToken = restClient.authenticate("admin", "setup");
        CustomerPojo customerPojo = restClient.createAutoGeneratedCustomer(adminToken);
        customerToken = restClient.authenticate(customerPojo.login, customerPojo.pass);

    }

    @Test(description = "Create valid subscription")
    @Severity(SeverityLevel.BLOCKER)
    @Feature("Create sub")
    public void createSubscription() {
        PlanPojo planPojo = restClient.createPlan(10, adminToken);
        SubscriptionPojo subscriptionPojo = restClient.createSubscription(planPojo, customerToken);
        Assert.assertEquals(subscriptionPojo.planName, planPojo.name);
        Assert.assertEquals(subscriptionPojo.planDetails, planPojo.details);
        Assert.assertEquals(subscriptionPojo.planId, planPojo.id);
        //Logger.debug(JsonMapper.toJson(restClient, false));
    }

    @Test(description = "Create subscription with unvalid token")
    @Severity(SeverityLevel.BLOCKER)
    @Feature("Create sub")
    public void createSubscriptionWithWrongToken() {
        PlanPojo planPojo = restClient.createPlan(10, adminToken);
        AccountTokenPojo wrongToken = new AccountTokenPojo();
        wrongToken.token = "NULL";
        Assert.assertThrows(InternalServerErrorException.class, () -> restClient.createSubscription(planPojo, wrongToken));
    }
}
