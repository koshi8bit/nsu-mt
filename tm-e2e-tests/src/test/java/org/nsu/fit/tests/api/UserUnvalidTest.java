package org.nsu.fit.tests.api;

import io.qameta.allure.Feature;
import io.qameta.allure.Severity;
import io.qameta.allure.SeverityLevel;
import org.nsu.fit.services.rest.RestClient;
import org.nsu.fit.services.rest.data.AccountTokenPojo;
import org.testng.Assert;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import javax.ws.rs.BadRequestException;

public class UserUnvalidTest {
    private AccountTokenPojo adminToken;
    private RestClient restClient;

    @BeforeClass
    private void auth() {
        restClient = new RestClient();
        adminToken = restClient.authenticate("admin", "setup");
    }

    @Test(description = "Pass is too short")
    @Severity(SeverityLevel.BLOCKER)
    @Feature("Create unvalid customer")
    public void createCustomerWithShortPassTest() {
        Assert.assertThrows(BadRequestException.class, () -> restClient.createAutoGeneratedCustomer(0, 5, adminToken));
    }

    @Test(description = "Pass is too short")
    @Severity(SeverityLevel.BLOCKER)
    @Feature("Create unvalid customer")
    public void createCustomerWithLongPassTest() {
        Assert.assertThrows(BadRequestException.class, () -> restClient.createAutoGeneratedCustomer(13, 20, adminToken));
    }


}
